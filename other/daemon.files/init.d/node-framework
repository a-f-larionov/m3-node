#!/bin/sh
### BEGIN INIT INFO
# Provides:	xoserver
# Required-Start: $all
# Required-Stop: $all
# Default-Start: 2 3 4 5
# Default-Stop:  0 1 6
# Short-Description: Start/stop xoServer.
# Description: node-framework Server init.
### END INIT INFO

DAEMON_PATH="/var/www/node-framework/"

DAEMON="./run.sh"

DAEMONOPTS=""

OUTPUT_FILE="/var/www/node-framework/server/last.log"

NAME=node-framework

DESC="node-framework service daemon description"

PIDFILE=/var/run/$NAME.pid

SCRIPTNAME=/etc/init.d/$NAME

case "$1" in
start)

	printf "%-50s" "Starting $NAME..."
	cd $DAEMON_PATH
	
	PID=`$DAEMON $DAEMONOPTS > $OUTPUT_FILE 2>&1 & echo $!`
	
	echo "Saving PID" $PID " to " $PIDFILE
	
        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PIDFILE
            printf "%s\n" "Ok"
        fi
	
;;
status)
        printf "%-50s" "Checking $NAME..."
		
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
        fi
;;
stop)
        printf "%-50s" "Stopping $NAME"
            PID=`cat $PIDFILE`
            cd $DAEMON_PATH
        if [ -f $PIDFILE ]; then
            kill -HUP $PID
            printf "%s\n" "Ok"
            rm -f $PIDFILE
        else
            printf "%s\n" "pidfile not found"
        fi
;;

restart)
  	$0 stop
  	$0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac
